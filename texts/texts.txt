------- Qt.html -------
Почему Qt?
Что общего у Google Earth, Guitar Pro 6, KDE, VLC и сотен других замечательных программных продуктов? Все они написаны с использованием Qt – мощной кроссплатформенной библиотеки общего назначения.
Успех создания приложения определяется его сложностью. Сложность можно разделить на два больших класса: сложность задачи и сложность инфраструктуры, которую необходимо создать для решения задачи. Смысл применения Qt в снижении инфраструктурной сложности. 

------- Courses.html -------
Мы учим программировать на C++ с использованием Qt. Мы проводим 40-часовые курсы, которые длятся две недели, по 4 академических часа в день.
Еще, мы ценим ваше и свое время, и понимаем, насколько скучно, и непродуктивно заниматься в разнородной группе. Поэтому проводим предварительное тестирование. 
Стоимость тестирования 300 р. Эти деньги войдут в оплату выбранного курса.
При недостаточном уровне подготовки рекомендуем пройти курс С++. Данный курс не является курсом “С++ с нуля” и направлен на углубление имеющихся знаний.

***Требование к C++.***
Знакомство с синтаксисом С++ и базовыми конструкциями языка. Представление об объектно-ориентированном программировании.

***Требование к курсу Qt.***
Успешно пройденное тестирование или сданный курс С++.

***Программа курса С++.***

День 1.	
Переменные, массивы, std::vector(сразу после массивов), циклы, указатели, ссылки, функции, перегрузка функций.
Потоки ввода/вывода. Манипуляторы и флаги. 

День 2.	
Классы. Управление доступом. Указатель this. inline-функции.
Отношение дружбы. Константные и статические члены. Виртуальные функции. Абстрактные классы.
Наследование. Множественное и виртуальное наследование. 
Полиморфизм. Приведение типов. RTTI.

День 3.	
Создание объектов. Размещение на стеке и в куче.

День 4.	 
Шаблоны. Принцип интерфейса и поиск Кёнига.
Умные указатели. RAII.

День 5.	
Контейнеры, алгоритмы и итераторы. Алгоритмическая сложность.
Класс строки. Характеристики типов (traits). Строковые алгоритмы.
ДЗ на выходные.(Варианты ДЗ приветствуются)

День 6.
Исключения. Гарантии безопасности исключений.  	

День 7.	
Цикл сообщений. Сверхминимальный OpenGL.
Кроcсплатформенный тетрис.

День 8. 
Некоторые паттерны проектирования.
Продолжаем разрабатывать тетрис. Иерархия объектов.

День 9. 
Тетрис. Последние штрихи.
Какая-нибудь мелкая тема.

День 10. Контрольная работа.

За бортом осталась многопоточность. Нужно что-то кроссплатформенное, вроде pthreads/boost.
Хотя, хотелось бы на примере API, чтобы рассказать, что-куда-откуда-зачем.

***Программа курса Qt.***

День 1.	
Строки. 

День 2.	

День 3.	

День 4.	 

День 5.	
ДЗ на выходные.(Варианты ДЗ приветствуются)

День 6.  	

День 7.	

День 8. 

День 9. 

День 10. Контрольная работа.

Куда-нибудь обязательно впихнуть windows-specific. Все-таки windows - 95% операционных систем.
Перехват, отправка и обработка сообщений windows.
::TerminateProcess на себя.
Как сменить иконку по-умолчанию exe-файла.

И вообще, тут надо много рассказывать про platform-specific.

Например, QFileSystemWatcher, который следит за файловой системой, не совсем корректно следит за директорией в windows.
Если вдруг начать читать файл по его сигналу, то реально попасть на момент, когда файл еще не записан и его не получится открыть.
Будет выглядеть, как будто файла еще нет, хотя, только что получил сигнал о том, что он есть.

Потрачу две недели на эксперименты.